generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          BigInt   @id @default(autoincrement())
  name        String
  description String
  stock       Int
  status      String
  price       Decimal  @default(0.00) // Campo de preço novo
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  salesItems    SalesItem[]
  purchaseItems PurchaseItem[]
}

model Sale {
  id             BigInt   @id @default(autoincrement())
  customer_name  String
  payment_method String // Campo de forma de pagamento novo
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  sales_items SalesItem[]
}

model SalesItem {
  id         BigInt   @id @default(autoincrement())
  sales_id   BigInt
  product_id BigInt
  qty_total  Int
  unit_price Decimal  @default(0.00) // Campo de preço unitário novo
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sale    Sale    @relation(fields: [sales_id], references: [id], onDelete: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model PurchaseOrder {
  id             BigInt   @id @default(autoincrement())
  supplier_name  String
  payment_method String // campo de pagamento novo
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  purchase_items PurchaseItem[]
}

model PurchaseItem {
  id          BigInt   @id @default(autoincrement())
  purchase_id BigInt
  product_id  BigInt
  qty_total   Int
  unit_price  Decimal  @default(0.00) // preço unitário
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  purchase PurchaseOrder @relation(fields: [purchase_id], references: [id], onDelete: Cascade)
  product  Product       @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model User {
  id   Int    @id @default(autoincrement())
  name String
  city String
}
